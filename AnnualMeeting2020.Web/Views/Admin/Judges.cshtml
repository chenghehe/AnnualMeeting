@using AnnualMeeting2020.Web.Models
@model IEnumerable<PerformerOut>
@{
    ViewBag.Title = "评委打分";
    var judges_Performer = ViewData["My_Judges_Performer"] as List<JudgesOut>;
}

@section styles{
    <style type="text/css">
    </style>
}

@using (Ajax.BeginForm("Judges", "Admin", null, new AjaxOptions
{
    HttpMethod = "Post",
    Confirm = "确认提交评分吗？一经提交无法修改！",
    OnSuccess = "OnSuccess",
    OnFailure = "OnFailure",
}, new
{
    @class = "form-horizontal"
}))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label for="select">选手：</label>
        <select class="form-control" name="pid" id="select">
            @foreach (var item in Model)
            {
                if (!item.IsSelect)
                {
                    var userName = string.Empty;
                    if (string.IsNullOrEmpty(item.CombinationName))
                    {
                        foreach (var name in item.UserName)
                        {
                            userName += name + "|";
                        }
                    }
                    else
                    {
                        userName = item.CombinationName;
                    }
                    userName = userName.Trim('|');

                    <option value="@item.Id">
                        @(item.IsSelect ? " (已评)" : "") @item.TeamName - @userName - @item.ProgramName
                    </option>
                }
            }
        </select>
    </div>
    @*<div class="form-group">
            <label for="fraction">感情：</label>
            <input type="number" min="1" max="100" step="0.01" class="form-control" name="fraction" id="fraction" placeholder="请输入分数">
        </div>*@

    <div class="form-group">
        <label for="feeling">感情：</label>
        <input type="number" min="1" max="20" step="0.01" class="form-control" name="Feeling" id="feeling" required placeholder="请输入感情分数">
    </div>
    <div class="form-group">
        <label for="pronounce">咬字：</label>
        <input type="number" min="1" max="20" step="0.01" class="form-control" name="Pronounce" id="pronounce" required placeholder="请输入咬字分数">
    </div>
    <div class="form-group">
        <label for="intonation">音准节奏：</label>
        <input type="number" min="1" max="20" step="0.01" class="form-control" name="Intonation" id="intonation" required placeholder="请输入音准节奏分数">
    </div>
    <div class="form-group">
        <label for="performance">舞台表现：</label>
        <input type="number" min="1" max="20" step="0.01" class="form-control" name="Performance" id="performance" required placeholder="请输入舞台表现分数">
    </div>
    <div class="form-group">
        <label for="progress">完成度：</label>
        <input type="number" min="1" max="20" step="0.01" class="form-control" name="Progress" id="progress" required placeholder="请输入完成度分数">
    </div>

    <button type="submit" class="btn btn-primary btn-block">提交评分</button>
}

<hr />

<div class="alert alert-primary text-center">
    <strong>已评列表：</strong>
</div>
<ul class="list-group">
    @foreach (var item in judges_Performer)
    {
        <li class="list-group-item list-group-item-info text-center">
            @{
                var userName = string.Empty;
                foreach (var name in item.UserName)
                {
                    userName += name + "|";
                }
                userName = userName.Trim('|');
            }
            <span class="text-left">
                @item.TeamName - @userName - @item.ProgramName
            </span>
            <br />
            <span class="text-right fraction">
                @item.Fraction
            </span>

        </li>
    }
</ul>

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript">

        $(function () {
            var wHeight = window.innerHeight;   //获取初始可视窗口高度
            window.addEventListener('resize', function () {       //监测窗口大小的变化事件
                var hh = window.innerHeight;     //当前可视窗口高度
                var viewTop = $(window).scrollTop();   //可视窗口高度顶部距离网页顶部的距离
                if (wHeight > hh) {           //可以作为虚拟键盘弹出事件
                    $(".content").animate({ scrollTop: viewTop + 100 });    //调整可视页面的位置
                } else {         //可以作为虚拟键盘关闭事件
                    $("content").animate({ scrollTop: viewTop - 100 });
                }
                wHeight = hh;
            });


            var serverHub = $.connection.AnnualMeeting2020Hub;
          @*开始链接*@
            $.connection.hub.start().done(function () {
                //alert("连接弹幕成功！");
            }).fail(function (error) {
                alert("连接服务器失败！");
            });


            function OnFailure(context) {
                alert("评分失败！");
            }
            function OnSuccess(data) {
                if (data.StatusCode == 200) {
                    serverHub.server.Refresh(function (error) {
                        console.log('Invocation of SendMessage failed.' + error);
                    });
                    alert(data.Result);
                    window.location.href = location;
                } else {
                    alert(data.Result);
                    window.location = location;
                }
            }
        });
    </script>
}
